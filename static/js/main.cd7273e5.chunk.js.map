{"version":3,"sources":["redux/actions.js","components/TodoInput.jsx","components/TodoItem.jsx","components/TodoList.jsx","App.js","reportWebVitals.js","redux/states.js","redux/store.js","redux/reducer.js","index.js"],"names":["ADD_TODO","DELETE_TODO","UPDATE_TODO","TodoInput","useState","name","setName","dispatch","useDispatch","className","onChange","e","target","value","type","onClick","todo","id","uuid","payload","TodoItem","editable","setEditable","length","updateTodo","todoId","TodoList","todos","useSelector","state","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","newTodos","action","push","filter","index","i","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAAaA,EAAW,WACXC,EAAc,cACdC,EAAc,c,0BCmCZC,MAhCf,WACE,MAAsBC,qBAAtB,mBAAKC,EAAL,KAAWC,EAAX,KACIC,EAAWC,cACf,OACE,gCACE,2CACA,sBAAKC,UAAU,UAAf,UACE,uBACEC,SAAU,SAACC,GAAD,OAAOL,EAAQK,EAAEC,OAAOC,QAClCA,MAAOR,EACPS,KAAK,OACLL,UAAU,qBAEZ,wBACEM,QAAS,WDhBZ,IAAiBC,ECiBZT,GDjBYS,ECkBF,CACNC,GAAIC,cACJb,KAAMA,GDnBb,CACLS,KAAMd,EACNmB,QAASH,KCoBDV,EAAQ,KAEVG,UAAU,sBAVZ,wB,QCkCOW,MAhDf,YAA6B,IAATJ,EAAQ,EAARA,KAClB,EAAgCZ,oBAAS,GAAzC,mBAAOiB,EAAP,KAAiBC,EAAjB,KACA,EAAwBlB,mBAASY,EAAKX,MAAtC,mBAAOA,EAAP,KAAaC,EAAb,KACIC,EAAWC,cACf,OACE,8BACE,sBAAKC,UAAU,8BAAf,UACE,oCAAOO,EAAKC,GAAGM,OAAS,EAAIP,EAAKC,GAAG,GAAKD,EAAKC,MAC9C,qBAAKR,UAAU,MAAf,SACGY,EACC,uBACEP,KAAK,OACLL,UAAU,eACVI,MAAOR,EACPK,SAAU,SAACC,GAAD,OAAOL,EAAQK,EAAEC,OAAOC,UAGpC,6BAAKG,EAAKX,SAGd,wBACEU,QAAS,WACPR,EFXL,SAAoBS,GACzB,MAAO,CACLF,KAAMZ,EACNiB,QAASH,GESCQ,CAAW,2BACNR,GADK,IAERX,KAAMA,MAGNgB,GACFf,EAAQU,EAAKX,MAEfiB,GAAaD,IAEfZ,UAAU,sBAbZ,SAeGY,EAAW,SAAW,SAEzB,wBACEN,QAAS,kBAAMR,GFjCEkB,EEiCkBT,EAAKC,GFhCzC,CACLH,KAAMb,EACNkB,QAASM,KAHN,IAAoBA,GEkCjBhB,UAAU,qBAFZ,0BC1BOiB,MAXf,WACE,IAAIC,EAAQC,aAAY,SAACC,GAAD,OAAWA,KACnC,OACE,qBAAKpB,UAAU,OAAf,SACGkB,EAAMG,KAAI,SAACd,GACV,OAAO,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKC,U,MCIpBc,MATf,WACE,OACE,sBAAKtB,UAAU,UAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCPHN,EAAQ,CACjB,CACEV,GAAI,EACJZ,KAAM,OAER,CACEY,GAAI,EACJZ,KAAM,OAER,CACEY,GAAI,EACJZ,KAAM,SAER,CACEY,GAAI,EACJZ,KAAM,SCZCoC,EAAQC,aCDE,WAA4B,IAC3CC,EADgBd,EAA0B,uDAAlBF,EAAOiB,EAAW,uCAE9C,OAAQA,EAAO9B,MACb,KAAKd,EAGH,OAFA2C,EAAQ,YAAOd,IACNgB,KAAKD,EAAOzB,SACdwB,EAET,KAAK1C,EAGH,OADA0C,GADAA,EAAQ,YAAOd,IACKiB,QAAO,SAAC9B,GAAD,OAAUA,EAAKC,IAAM2B,EAAOzB,WAGzD,KAAKjB,EACHyC,EAAQ,YAAOd,GAEf,IADA,IAAIkB,GAAS,EACJC,EAAI,EAAGA,EAAIL,EAASpB,SAC3BwB,IACIJ,EAASK,GAAG/B,IAAM2B,EAAOzB,QAAQF,IAFF+B,KAMrC,IAAc,GAAVD,EAGF,OAFAJ,EAASI,GAASH,EAAOzB,QACzB8B,QAAQC,IAAIP,GACLA,EAGb,OAAOd,KCvBTsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUZ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJa,SAASC,eAAe,SAM1BvB,M","file":"static/js/main.cd7273e5.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\nexport const DELETE_TODO = \"DELETE_TODO\";\nexport const UPDATE_TODO = \"UPDATE_TODO\";\nexport function addTodo(todo) {\n  return {\n    type: ADD_TODO,\n    payload: todo,\n  };\n}\nexport function deleteTodo(todoId) {\n  return {\n    type: DELETE_TODO,\n    payload: todoId,\n  };\n}\nexport function updateTodo(todo) {\n  return {\n    type: UPDATE_TODO,\n    payload: todo,\n  };\n}\n","import React, { useState } from \"react\";\nimport { addTodo } from \"../redux/actions\";\nimport { v1 as uuid } from \"uuid\";\nimport { useDispatch } from \"react-redux\";\n\nfunction TodoInput() {\n  let [name, setName] = useState();\n  let dispatch = useDispatch();\n  return (\n    <div>\n      <h3>TodoInput</h3>\n      <div className=\"row m-2\">\n        <input\n          onChange={(e) => setName(e.target.value)}\n          value={name}\n          type=\"text\"\n          className=\"col form-control\"\n        />\n        <button\n          onClick={() => {\n            dispatch(\n              addTodo({\n                id: uuid(),\n                name: name,\n              })\n            );\n            setName(\"\");\n          }}\n          className=\"btn btn-primary m-2\"\n        >\n          Add\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default TodoInput;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteTodo, updateTodo } from \"../redux/actions\";\n\nfunction TodoItem({ todo }) {\n  const [editable, setEditable] = useState(false);\n  const [name, setName] = useState(todo.name);\n  let dispatch = useDispatch();\n  return (\n    <div>\n      <div className=\"row mx-2 align-items-center\">\n        <div>#{todo.id.length > 1 ? todo.id[2] : todo.id}</div>\n        <div className=\"col\">\n          {editable ? (\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          ) : (\n            <h4>{todo.name}</h4>\n          )}\n        </div>\n        <button\n          onClick={() => {\n            dispatch(\n              updateTodo({\n                ...todo,\n                name: name,\n              })\n            );\n            if (editable) {\n              setName(todo.name);\n            }\n            setEditable(!editable);\n          }}\n          className=\"btn btn-primary m-2\"\n        >\n          {editable ? \"Update\" : \"Edit\"}\n        </button>\n        <button\n          onClick={() => dispatch(deleteTodo(todo.id))}\n          className=\"btn btn-danger m-2\"\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default TodoItem;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport TodoItem from \"./TodoItem\";\n\nfunction TodoList() {\n  let todos = useSelector((state) => state);\n  return (\n    <div className=\"my-4\">\n      {todos.map((todo) => {\n        return <TodoItem key={todo.id} todo={todo} />;\n      })}\n    </div>\n  );\n}\n\nexport default TodoList;\n","import \"./App.css\";\nimport TodoInput from \"./components/TodoInput\";\nimport TodoList from \"./components/TodoList\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nfunction App() {\n  return (\n    <div className=\"App m-5\">\n      <TodoInput />\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export let todos = [\n  {\n    id: 1,\n    name: \"One\",\n  },\n  {\n    id: 2,\n    name: \"Two\",\n  },\n  {\n    id: 3,\n    name: \"Three\",\n  },\n  {\n    id: 4,\n    name: \"Four\",\n  },\n];\n","import { createStore } from \"redux\";\nimport { reducer } from \"./reducer\";\n\nexport let store = createStore(reducer);\n","import { ADD_TODO, UPDATE_TODO, DELETE_TODO } from \"./actions\";\nimport { todos } from \"./states\";\nexport let reducer = (state = todos, action) => {\n  let newTodos;\n  switch (action.type) {\n    case ADD_TODO:\n      newTodos = [...state];\n      newTodos.push(action.payload);\n      return newTodos;\n\n    case DELETE_TODO:\n      newTodos = [...state];\n      newTodos = newTodos.filter((todo) => todo.id != action.payload);\n      return newTodos;\n\n    case UPDATE_TODO:\n      newTodos = [...state];\n      let index = -1;\n      for (let i = 0; i < newTodos.length; i++) {\n        index++;\n        if (newTodos[i].id == action.payload.id) {\n          break;\n        }\n      }\n      if (index != -1) {\n        newTodos[index] = action.payload;\n        console.log(newTodos);\n        return newTodos;\n      }\n  }\n  return state;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}